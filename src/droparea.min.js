/* File: src/droparea.js */

(function($){'use strict';var dropArea = [];var oo = [];var defaults ={url:'path/to/server/script',method:'POST',upload:true,fileHolder:'#file',filePreview:'#file-preview',notificationDelay:5000,accepted:'.jpg|.png|.gif',fileMaxSize:2048,extra:[],onSuccess:null,onFail:null,i18n:{unableToUpload:'Unable to upload at this time.<br >Select a file.',wrongFileType:'Unacceptable file type!<br >Try:%s',wrongFileSize:'Dropped file is too big!<br >Max file size allowed:%s',abort:'Abort',mb:' MB',kb:' KB',percent:'% ',dismiss:'Dismiss',error:'Err:'}};var _sent = 0;var _updateImageSource = function(file){var oFReader = new FileReader();if (file){oFReader.readAsDataURL(file);oFReader.onload = function(oFREvent){$(o.filePreview).animate({opacity:0},'slow',function(){$(o.filePreview).attr('src',oFREvent.target.result);$(o.filePreview).animate({opacity:1},'slow',function(){drop_area .find('.statusbar.alert-block') .fadeOut('slow',function(){$(this).remove();});});});};}};var _onClickDismiss = function(ev){ev.stopPropagation();ev.preventDefault();$(ev.currentTarget) .parent() .fadeOut('fast',function(){$(this).remove();});};var _createStatusBar = function(drop_area){_sent += 1;var daKey = drop_area.data('droparea-key');var o = oo[daKey];var abortElem = $('<a class="btn abort">' + o.i18n.abort + '</div>');var fileNameElem = $('<div class="filename" ></div>');var fileSizeElem = $('<div class="filesize" ></div>');var progressBarElem = $('<div class="progressbar"><div ></div></div>',{style:{top:0,left:0}});var statusBarElem = $('<div class="statusbar"></div>',{id:'droparea-statusbar-' + _sent});var setFileNameSize = function(fileName,fileSize){var sizeStr = '';var sizeKb = fileSize / 1024;var fixSize = function(val){val = parseFloat(val.toFixed(2));return val % 1 === 0 ? val.toFixed(0):val.toFixed(2);};if (parseInt(sizeKb) > 1024){sizeStr = fixSize(sizeKb / 1024) + o.i18n.mb;}else{sizeStr = fixSize(sizeKb) + o.i18n.kb;}fileNameElem.html(fileName);fileSizeElem.html(sizeStr);};var setProgress = function(progress){progressBarElem .find('div') .animate({width:progress + '%'},10) .html(progress + o.i18n.percent);if (parseInt(progress) >= 100){abortElem.hide();}};var setAbort = function(jqxhr){abortElem.off('click.droparea').on('click.droparea',function(event){event.preventDefault();event.stopPropagation();if (jqxhr.abort){jqxhr.abort();}statusBarElem.fadeOut('fast',function(){statusBarElem.remove();});});};var setFailure = function(msg){progressBarElem.addClass('droparea-fail');progressBarElem.find('div:first').html(msg);};statusBarElem.append( fileNameElem,fileSizeElem,progressBarElem,abortElem );drop_area.find('.statusbar').remove();drop_area.append(statusBarElem);return{statusBar:statusBarElem,setFailure:setFailure,setFileNameSize:setFileNameSize.bind(this),setProgress:setProgress.bind(this),setAbort:setAbort.bind(this)};};var _createAlertBlock = function(target,msg,dismissable,autohide){var alertblock,filename,dismiss;var daKey = target.data('droparea-key');var opts = oo[daKey];dismissable = typeof dismissable!= 'undefined' ? dismissable:true;autohide = typeof autohide!= 'undefined' ? autohide:true;alertblock = $('<div class="statusbar alert-block"></div>');filename = $('<div class="filename"></div>') .html(msg) .appendTo(alertblock);dismiss = $('<button class="btn dismiss"></button>').html( opts.i18n.dismiss );alertblock.css({top:0,left:0});target.find('.statusbar').remove();target.append(alertblock);if (dismissable){dismiss .off('click.droparea') .on('click.droparea',_onClickDismiss) .appendTo(alertblock);}if (autohide){setTimeout(function(){alertblock.fadeOut('fast',function(){$(this).remove();});},opts.notificationDelay);}};var _sendFileToServer = function(drop_area,o,file){var statusbar,jqXHR;var fnXHR = function(){var xhrObj = $.ajaxSettings.xhr();var onUploadProgress = function(ev){var percent = 0;var position = ev.loaded||ev.position;var total = ev.total;if (ev.lengthComputable){percent = Math.ceil(position / total * 100);}statusbar.setProgress(percent);};if (xhrObj.upload){xhrObj.upload.addEventListener('progress',onUploadProgress,false);}return xhrObj;};var ajaxOpts ={xhr:fnXHR,url:o.url,method:o.method,type:o.method,contentType:false,processData:false,cache:false,data:{}};var onXHRSuccess = function(r){if (typeof r === 'string'){r = $.parseJSON(r);}statusbar.setProgress(100);if (o.onSuccess!== null && $.isFunction(o.onSuccess)){var fileNameToReturn = typeof r.file_name!== 'undefined' ? r.file_name:null;o.onSuccess(r,fileNameToReturn,file);}drop_area.removeClass('droparea-dropped');};var onXHRFail = function(jqXHR,textStatus,errorThrown){statusbar.setFailure(o.i18n.error + errorThrown);if (o.onFail && $.isFunction(o.onSuccess)){o.onFail(jqXHR.responseJSON||jqXHR);}};var onXHRComplete = function(rjqXHR,textStatus){var fh = $(o.fileHolder);fh.replaceWith(fh.val('').clone(true));setTimeout(function(){statusbar.statusBar.fadeOut('fast',function(){$(this).remove();});},o.notificationDelay);};ajaxOpts.data = new FormData();ajaxOpts.data.append(o.fileHolder.replace('#',''),file);if (o.extra!== null){for (var i in o.extra){if ($('#' + o.extra[i].replace('#','')).length){ajaxOpts.data.append( o.extra[i].replace('#',''),$('#' + o.extra[i].replace('#','')).val() );}}}statusbar = new _createStatusBar(drop_area);statusbar.setFileNameSize(file.name,file.size);jqXHR = $.ajax(ajaxOpts) .then(onXHRSuccess) .catch(onXHRFail) .always(onXHRComplete);statusbar.setAbort(jqXHR);};var _interceptFileSelector = function(drop_area,o){if ($(o.fileHolder).length && $(o.filePreview).length){$(o.fileHolder) .off('change.droparea') .on('change.droparea',(event) =>{var file;if ( event.originalEvent && event.originalEvent.target && event.originalEvent.target.files ){file = event.originalEvent.target.files[0];_sendFileToServer(drop_area,o,file);}});}};var _onClick = function(ev){ev.stopPropagation();ev.preventDefault();var drop_area = $(ev.currentTarget);var daKey = drop_area.data('droparea-key');var o = oo[daKey];$(o.fileHolder).click();};var _onDragEnter = function(ev){ev.stopPropagation();ev.preventDefault();var drop_area = $(ev.currentTarget);drop_area.addClass('droparea-dragging');};var _onDragLeave = function(ev){ev.stopPropagation();ev.preventDefault();var drop_area = $(ev.currentTarget);drop_area.removeClass('droparea-dragging');};var _onDragOver = function(ev){ev.stopPropagation();ev.preventDefault();var drop_area = $(ev.currentTarget);drop_area.addClass('droparea-dragging');};var _onDrop = function(ev){ev.preventDefault();var file = ev.originalEvent.dataTransfer.files[0];var drop_area = $(ev.currentTarget);var daKey = drop_area.data('droparea-key');var o = oo[daKey];drop_area.toggleClass('droparea-dropped droparea-dragging');if (!o.upload){_createAlertBlock(drop_area,o.i18n.unableToUpload,true,false);$(o.fileHolder).click();return;}if (o.accepted!== null && typeof o.accepted!== 'boolean'){var accepting = o.accepted.toLowerCase();var extension = file.name .substr(file.name.lastIndexOf('.')) .toLowerCase();if (accepting.indexOf(extension) === -1){_createAlertBlock( drop_area,o.i18n.wrongFileType.replace( '%s','<b >' + o.accepted.split('|').join('</b> or <b >') + '</b>' ) );return;}}if (file.size / 1024 > o.fileMaxSize){_createAlertBlock( drop_area,o.i18n.wrongFileSize.replace( '%s','<b >' + o.fileMaxSize + ' ' + o.i18n.kb + '</b>' ) );return;}_sendFileToServer(drop_area,o,file);};var _initHandlers = function(drop_area){drop_area .off('click.droparea') .on('click.droparea',_onClick) .off('dragenter.droparea') .on('dragenter.droparea',_onDragEnter) .off('dragleave.droparea') .on('dragleave.droparea',_onDragLeave) .off('dragover.droparea') .on('dragover.droparea',_onDragOver) .off('drop.droparea') .on('drop.droparea',_onDrop);};var _construct = function(options){return this.each(function(){var daKey = dropArea.length;var drop_area = $(this);var o = $.extend({},defaults,options);drop_area.attr('data-droparea-key',daKey);if (['POST','PATCH','PUT'].indexOf(o.method) === -1){o.method = 'POST';}drop_area .parent() .css('position',drop_area.parent().css('position')||'relative');dropArea[daKey] = drop_area;oo[daKey] = o;_interceptFileSelector(drop_area,o);_initHandlers(drop_area);});};var methods ={init:_construct};$.fn.droparea = function(method){if (methods[method]){return methods[method].apply( this,Array.prototype.slice.call(arguments,1) );}else if (typeof method === 'object'||!method){return methods.init.apply(this,arguments);}else{$.error('Method ' + method + ' does not exist on Droparea.js');}};})(jQuery);

